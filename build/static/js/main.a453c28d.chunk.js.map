{"version":3,"sources":["SocketEvents.js","components/LoginForm.js","App.js","index.js"],"names":["module","exports","VERIFY_USER","USER_CONNECTED","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","username","target","value","handleSubmit","preventDefault","socket","emit","state","handleVerification","isNameTaken","error","setUsername","react_default","a","createElement","onSubmit","className","htmlFor","type","id","onChange","React","Component","App","io","on","console","log","concat","components_LoginForm","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"0EAAAA,EAAOC,QAAU,CACfC,YAAa,cACbC,eAAgB,iOCuDHC,cArDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,aAAe,SAACC,GACdR,EAAKS,SAAS,CAAEC,SAAUF,EAAMG,OAAOC,SATtBZ,EAYnBa,aAAe,SAACL,GACdA,EAAMM,iBACNd,EAAKD,MAAMgB,OAAOC,KAAKpB,cACrBI,EAAKiB,MAAMP,SACXV,EAAKkB,qBAhBUlB,EAoBnBkB,mBAAqB,SAACR,EAAUS,GAC1BA,EACFnB,EAAKS,SAAS,CAAEW,MAAO,qCAEvBpB,EAAKS,SAAS,CAAEW,MAAO,KACvBpB,EAAKD,MAAMsB,YAAYX,GACvBV,EAAKD,MAAMgB,OAAOC,KAAKnB,iBAAgBa,KAxBzCV,EAAKiB,MAAQ,CACXP,SAAU,GACVU,MAAO,IAJQpB,wEA+BjB,OACEsB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,SAAUtB,KAAKU,aAAca,UAAU,aAC3CJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,YAAf,QAEEL,EAAAC,EAAAC,cAAA,SACEI,KAAK,OACLC,GAAG,WACHjB,MAAOT,KAAKc,MAAMP,SAClBoB,SAAU3B,KAAKI,gBAGnBe,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SAAShB,MAAM,WAC3BU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACZvB,KAAKc,MAAMG,gBA9CAW,IAAMC,WCuCfC,cAjCb,SAAAA,EAAYlC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,IACjBjC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAA3B,KAAAH,KAAMJ,KAgBRsB,YAAc,SAACX,GACbV,EAAKS,SAAS,CAAEC,cAhBhBV,EAAKiB,MAAQ,CACXF,OAAQ,KACRL,SAAU,MAJKV,mFASjB,IAAMe,EAASmB,IAbD,KAcdnB,EAAOoB,GAAG,UAAW,WACnBC,QAAQC,IAAR,wCAAAC,OAAoDvB,EAAOc,OAG7D1B,KAAKM,SAAS,CAAEM,4CAQhB,OACEO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACe,EAAD,CACExB,OAAQZ,KAAKc,MAAMF,OACnBM,YAAalB,KAAKkB,sBA3BVU,IAAMC,WCHxBQ,IAASC,OACPnB,EAAAC,EAAAC,cAACF,EAAAC,EAAMmB,WAAP,KACEpB,EAAAC,EAAAC,cAACmB,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.a453c28d.chunk.js","sourcesContent":["module.exports = {\n  VERIFY_USER: \"VERIFY_USER\",\n  USER_CONNECTED: \"USER_CONNECTED\"\n};\n","import React from 'react';\nimport { VERIFY_USER, USER_CONNECTED } from '../SocketEvents';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      error: \"\"\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ username: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.socket.emit(VERIFY_USER,\n      this.state.username,\n      this.handleVerification\n    );\n  }\n\n  handleVerification = (username, isNameTaken) => {\n    if (isNameTaken) {\n      this.setState({ error: \"This username is already taken.\" });\n    } else {\n      this.setState({ error: \"\" });\n      this.props.setUsername(username);\n      this.props.socket.emit(USER_CONNECTED, username);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className=\"loginForm\">\n          <label htmlFor=\"username\">\n            Name:\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n              />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n          <div className=\"error\">\n            {this.state.error}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport './index.css';\nimport io from 'socket.io-client';\nimport LoginForm from './components/LoginForm';\n\nconst socketUrl = \"/\";                        // FOR BUILD\n//const socketUrl = \"http://192.168.0.101:3030\"; // FOR DEVELOPMENT\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      socket: null,\n      username: null\n    };\n  }\n\n  componentDidMount() {\n    const socket = io(socketUrl);\n    socket.on('connect', () => {\n      console.log(`Connected to server, my socket ID is ${socket.id}`);\n    });\n    // Need on disconnect\n    this.setState({ socket });\n  }\n\n  setUsername = (username) => {\n    this.setState({ username });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <LoginForm\n          socket={this.state.socket}\n          setUsername={this.setUsername}\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}